name: UNIT_TEST
on: [push]
jobs:
  Linux_select:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: prepare test files
        run: |
          chmod +x test/integration/prepare_test_file.sh
          . test/integration/prepare_test_file.sh; prepare_test_file

      - name: build
        run: |
          cmake -S . -B build -DCUSTOM_FLAGS="-D USE_SELECT -D ECHO"
          cmake --build build

      - name: run all unit tests on Linux
        run: |
          ./build/unit_test test/integration/integration_test.conf 2>/dev/null
          . test/integration/prepare_test_file.sh; clear_test_file

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          title: "[UNIT_TEST] SELECT Ver. (on Linux)"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}


  macOS_select:
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: prepare test files
        run: |
          chmod +x test/integration/prepare_test_file.sh
          . test/integration/prepare_test_file.sh; prepare_test_file

      - name: build
        run: |
          cmake -S . -B build -DCUSTOM_FLAGS="-D USE_SELECT -D ECHO"
          cmake --build build

      - name: run all unit tests on macOS
        run: |
          ./build/unit_test test/integration/integration_test.conf 2>/dev/null
          . test/integration/prepare_test_file.sh; clear_test_file

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          title: "[UNIT_TEST] SELECT Ver. (on macOS)"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
