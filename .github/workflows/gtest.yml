name: UNIT_TEST
on: [push]
jobs:
  Linux_select:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: build
        run: |
          cmake -S . -B build -DCUSTOM_FLAGS="-D USE_SELECT_MULTIPLEXER"
          cmake --build build

      - name: run all tests on Linux
        run: ./build/unit_test 2>/dev/null

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          title: "[UNIT_TEST] SELECT Ver. (on Linux)"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}

#  Linux_epoll:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: build
#        run: |
#          cmake -S . -B build
#          cmake --build build
#
#      - name: run all tests on Linux
#        run: ./build/unit_test 2>/dev/null
#
#      - uses: sarisia/actions-status-discord@v1
#        if: always()
#        with:
#          title: "[UNIT_TEST] EPOLL Ver. (on Linux)"
#          webhook: ${{ secrets.DISCORD_WEBHOOK }}
#          status: ${{ job.status }}

  macOS_select:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: build
        run: |
          cmake -S . -B build -DCUSTOM_FLAGS="-D USE_SELECT_MULTIPLEXER"
          cmake --build build

      - name: run all tests on macOS
        run: ./build/unit_test 2>/dev/null

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          title: "[UNIT_TEST] SELECT Ver. (on macOS)"
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}

#  macOS_kqueue:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: build
#        run: |
#          cmake -S . -B build
#          cmake --build build
#
#      - name: run all tests on macOS
#        run: ./build/unit_test 2>/dev/null
#
#      - uses: sarisia/actions-status-discord@v1
#        if: always()
#        with:
#          title: "[UNIT TEST] KQUEUE Ver. (on macOS)"
#          webhook: ${{ secrets.DISCORD_WEBHOOK }}
#          status: ${{ job.status }}
